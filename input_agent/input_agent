//input agent
class counter_input_agent extends uvm_agent;
  //factory registartion
  'uvm_component_utils(counter_input_agent);
  function new (string name="counter_input_agent",uvm_component parent);
    super.new(name,parent);
  endfunction
  
  //handles
          counter_input_monitor monh;
  		counter_int_seqr seqrh;
  		counter_input_driver driverh;
  		counter_config m_cfg;
  
  //build_phase
  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    if (!uvm_config_db#(counter_config)::get(thsi,"","counter_config",m_cfg))
    'uvm_fatal(get_type_name,"cant get db")
      monh=counter_input_monitor::type_id::create("monh",this);
    if(m_cfg.input_agent_is_active==UVM_ACTIVE)
      begin
        seqrh=counter_int_seqr::type_id::create("seqrh",this);
        driverh=counter_input_driver::type_id::create("driverh",this);
      end
      endfunction
  
  //connect_phase
  function void connect_phase(uvm_phase phase);
    if(m_cfg.input_agent_is_active==UVM_ACTIVE)
      driverh.seq_item_port.connect(seqrh.seq_item_export);
  endfunction
endclass
